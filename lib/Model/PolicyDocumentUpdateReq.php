<?php
/**
 * PolicyDocumentUpdateReq
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Core API
 *
 * Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@marqeta.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * PolicyDocumentUpdateReq Class Doc Comment
 *
 * @category Class
 * @description Request details to update a document policy.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class PolicyDocumentUpdateReq implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PolicyDocumentUpdateReq';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_statement' => '\OpenAPI\Client\Model\PolicyDocumentTemplateReq',
        'benefits_disclosure_premium' => '\OpenAPI\Client\Model\PolicyDocumentAssetReq',
        'benefits_disclosure_traditional' => '\OpenAPI\Client\Model\PolicyDocumentAssetReq',
        'card_member_agreement' => '\OpenAPI\Client\Model\PolicyDocumentAssetReq',
        'e_disclosure' => '\OpenAPI\Client\Model\PolicyDocumentAssetReq',
        'name' => 'string',
        'noaa_multiple_reason_with_dodd_frank' => '\OpenAPI\Client\Model\PolicyDocumentTemplateReq',
        'noaa_single_reason' => '\OpenAPI\Client\Model\PolicyDocumentTemplateReq',
        'noaa_single_reason_with_dodd_frank' => '\OpenAPI\Client\Model\PolicyDocumentTemplateReq',
        'pre_qualification_disclosure' => '\OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq',
        'privacy_policy' => '\OpenAPI\Client\Model\PolicyDocumentAssetReq',
        'rewards_disclosure' => '\OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq',
        'summary_of_credit_terms' => '\OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq',
        'terms_schedule' => '\OpenAPI\Client\Model\PolicyDocumentTemplateReq'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'account_statement' => null,
        'benefits_disclosure_premium' => null,
        'benefits_disclosure_traditional' => null,
        'card_member_agreement' => null,
        'e_disclosure' => null,
        'name' => null,
        'noaa_multiple_reason_with_dodd_frank' => null,
        'noaa_single_reason' => null,
        'noaa_single_reason_with_dodd_frank' => null,
        'pre_qualification_disclosure' => null,
        'privacy_policy' => null,
        'rewards_disclosure' => null,
        'summary_of_credit_terms' => null,
        'terms_schedule' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_statement' => 'account_statement',
        'benefits_disclosure_premium' => 'benefits_disclosure_premium',
        'benefits_disclosure_traditional' => 'benefits_disclosure_traditional',
        'card_member_agreement' => 'card_member_agreement',
        'e_disclosure' => 'e_disclosure',
        'name' => 'name',
        'noaa_multiple_reason_with_dodd_frank' => 'noaa_multiple_reason_with_dodd_frank',
        'noaa_single_reason' => 'noaa_single_reason',
        'noaa_single_reason_with_dodd_frank' => 'noaa_single_reason_with_dodd_frank',
        'pre_qualification_disclosure' => 'pre_qualification_disclosure',
        'privacy_policy' => 'privacy_policy',
        'rewards_disclosure' => 'rewards_disclosure',
        'summary_of_credit_terms' => 'summary_of_credit_terms',
        'terms_schedule' => 'terms_schedule'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_statement' => 'setAccountStatement',
        'benefits_disclosure_premium' => 'setBenefitsDisclosurePremium',
        'benefits_disclosure_traditional' => 'setBenefitsDisclosureTraditional',
        'card_member_agreement' => 'setCardMemberAgreement',
        'e_disclosure' => 'setEDisclosure',
        'name' => 'setName',
        'noaa_multiple_reason_with_dodd_frank' => 'setNoaaMultipleReasonWithDoddFrank',
        'noaa_single_reason' => 'setNoaaSingleReason',
        'noaa_single_reason_with_dodd_frank' => 'setNoaaSingleReasonWithDoddFrank',
        'pre_qualification_disclosure' => 'setPreQualificationDisclosure',
        'privacy_policy' => 'setPrivacyPolicy',
        'rewards_disclosure' => 'setRewardsDisclosure',
        'summary_of_credit_terms' => 'setSummaryOfCreditTerms',
        'terms_schedule' => 'setTermsSchedule'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_statement' => 'getAccountStatement',
        'benefits_disclosure_premium' => 'getBenefitsDisclosurePremium',
        'benefits_disclosure_traditional' => 'getBenefitsDisclosureTraditional',
        'card_member_agreement' => 'getCardMemberAgreement',
        'e_disclosure' => 'getEDisclosure',
        'name' => 'getName',
        'noaa_multiple_reason_with_dodd_frank' => 'getNoaaMultipleReasonWithDoddFrank',
        'noaa_single_reason' => 'getNoaaSingleReason',
        'noaa_single_reason_with_dodd_frank' => 'getNoaaSingleReasonWithDoddFrank',
        'pre_qualification_disclosure' => 'getPreQualificationDisclosure',
        'privacy_policy' => 'getPrivacyPolicy',
        'rewards_disclosure' => 'getRewardsDisclosure',
        'summary_of_credit_terms' => 'getSummaryOfCreditTerms',
        'terms_schedule' => 'getTermsSchedule'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_statement'] = $data['account_statement'] ?? null;
        $this->container['benefits_disclosure_premium'] = $data['benefits_disclosure_premium'] ?? null;
        $this->container['benefits_disclosure_traditional'] = $data['benefits_disclosure_traditional'] ?? null;
        $this->container['card_member_agreement'] = $data['card_member_agreement'] ?? null;
        $this->container['e_disclosure'] = $data['e_disclosure'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['noaa_multiple_reason_with_dodd_frank'] = $data['noaa_multiple_reason_with_dodd_frank'] ?? null;
        $this->container['noaa_single_reason'] = $data['noaa_single_reason'] ?? null;
        $this->container['noaa_single_reason_with_dodd_frank'] = $data['noaa_single_reason_with_dodd_frank'] ?? null;
        $this->container['pre_qualification_disclosure'] = $data['pre_qualification_disclosure'] ?? null;
        $this->container['privacy_policy'] = $data['privacy_policy'] ?? null;
        $this->container['rewards_disclosure'] = $data['rewards_disclosure'] ?? null;
        $this->container['summary_of_credit_terms'] = $data['summary_of_credit_terms'] ?? null;
        $this->container['terms_schedule'] = $data['terms_schedule'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['account_statement'] === null) {
            $invalidProperties[] = "'account_statement' can't be null";
        }
        if ($this->container['benefits_disclosure_premium'] === null) {
            $invalidProperties[] = "'benefits_disclosure_premium' can't be null";
        }
        if ($this->container['benefits_disclosure_traditional'] === null) {
            $invalidProperties[] = "'benefits_disclosure_traditional' can't be null";
        }
        if ($this->container['card_member_agreement'] === null) {
            $invalidProperties[] = "'card_member_agreement' can't be null";
        }
        if ($this->container['e_disclosure'] === null) {
            $invalidProperties[] = "'e_disclosure' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if (!preg_match("/(?!^ +$)^.+$/", $this->container['name'])) {
            $invalidProperties[] = "invalid value for 'name', must be conform to the pattern /(?!^ +$)^.+$/.";
        }

        if ($this->container['noaa_multiple_reason_with_dodd_frank'] === null) {
            $invalidProperties[] = "'noaa_multiple_reason_with_dodd_frank' can't be null";
        }
        if ($this->container['noaa_single_reason'] === null) {
            $invalidProperties[] = "'noaa_single_reason' can't be null";
        }
        if ($this->container['noaa_single_reason_with_dodd_frank'] === null) {
            $invalidProperties[] = "'noaa_single_reason_with_dodd_frank' can't be null";
        }
        if ($this->container['privacy_policy'] === null) {
            $invalidProperties[] = "'privacy_policy' can't be null";
        }
        if ($this->container['summary_of_credit_terms'] === null) {
            $invalidProperties[] = "'summary_of_credit_terms' can't be null";
        }
        if ($this->container['terms_schedule'] === null) {
            $invalidProperties[] = "'terms_schedule' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_statement
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentTemplateReq
     */
    public function getAccountStatement()
    {
        return $this->container['account_statement'];
    }

    /**
     * Sets account_statement
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentTemplateReq $account_statement account_statement
     *
     * @return self
     */
    public function setAccountStatement($account_statement)
    {
        $this->container['account_statement'] = $account_statement;

        return $this;
    }

    /**
     * Gets benefits_disclosure_premium
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentAssetReq
     */
    public function getBenefitsDisclosurePremium()
    {
        return $this->container['benefits_disclosure_premium'];
    }

    /**
     * Sets benefits_disclosure_premium
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentAssetReq $benefits_disclosure_premium benefits_disclosure_premium
     *
     * @return self
     */
    public function setBenefitsDisclosurePremium($benefits_disclosure_premium)
    {
        $this->container['benefits_disclosure_premium'] = $benefits_disclosure_premium;

        return $this;
    }

    /**
     * Gets benefits_disclosure_traditional
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentAssetReq
     */
    public function getBenefitsDisclosureTraditional()
    {
        return $this->container['benefits_disclosure_traditional'];
    }

    /**
     * Sets benefits_disclosure_traditional
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentAssetReq $benefits_disclosure_traditional benefits_disclosure_traditional
     *
     * @return self
     */
    public function setBenefitsDisclosureTraditional($benefits_disclosure_traditional)
    {
        $this->container['benefits_disclosure_traditional'] = $benefits_disclosure_traditional;

        return $this;
    }

    /**
     * Gets card_member_agreement
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentAssetReq
     */
    public function getCardMemberAgreement()
    {
        return $this->container['card_member_agreement'];
    }

    /**
     * Sets card_member_agreement
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentAssetReq $card_member_agreement card_member_agreement
     *
     * @return self
     */
    public function setCardMemberAgreement($card_member_agreement)
    {
        $this->container['card_member_agreement'] = $card_member_agreement;

        return $this;
    }

    /**
     * Gets e_disclosure
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentAssetReq
     */
    public function getEDisclosure()
    {
        return $this->container['e_disclosure'];
    }

    /**
     * Sets e_disclosure
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentAssetReq $e_disclosure e_disclosure
     *
     * @return self
     */
    public function setEDisclosure($e_disclosure)
    {
        $this->container['e_disclosure'] = $e_disclosure;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Name of the document policy.
     *
     * @return self
     */
    public function setName($name)
    {

        if ((!preg_match("/(?!^ +$)^.+$/", $name))) {
            throw new \InvalidArgumentException("invalid value for $name when calling PolicyDocumentUpdateReq., must conform to the pattern /(?!^ +$)^.+$/.");
        }

        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets noaa_multiple_reason_with_dodd_frank
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentTemplateReq
     */
    public function getNoaaMultipleReasonWithDoddFrank()
    {
        return $this->container['noaa_multiple_reason_with_dodd_frank'];
    }

    /**
     * Sets noaa_multiple_reason_with_dodd_frank
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentTemplateReq $noaa_multiple_reason_with_dodd_frank noaa_multiple_reason_with_dodd_frank
     *
     * @return self
     */
    public function setNoaaMultipleReasonWithDoddFrank($noaa_multiple_reason_with_dodd_frank)
    {
        $this->container['noaa_multiple_reason_with_dodd_frank'] = $noaa_multiple_reason_with_dodd_frank;

        return $this;
    }

    /**
     * Gets noaa_single_reason
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentTemplateReq
     */
    public function getNoaaSingleReason()
    {
        return $this->container['noaa_single_reason'];
    }

    /**
     * Sets noaa_single_reason
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentTemplateReq $noaa_single_reason noaa_single_reason
     *
     * @return self
     */
    public function setNoaaSingleReason($noaa_single_reason)
    {
        $this->container['noaa_single_reason'] = $noaa_single_reason;

        return $this;
    }

    /**
     * Gets noaa_single_reason_with_dodd_frank
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentTemplateReq
     */
    public function getNoaaSingleReasonWithDoddFrank()
    {
        return $this->container['noaa_single_reason_with_dodd_frank'];
    }

    /**
     * Sets noaa_single_reason_with_dodd_frank
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentTemplateReq $noaa_single_reason_with_dodd_frank noaa_single_reason_with_dodd_frank
     *
     * @return self
     */
    public function setNoaaSingleReasonWithDoddFrank($noaa_single_reason_with_dodd_frank)
    {
        $this->container['noaa_single_reason_with_dodd_frank'] = $noaa_single_reason_with_dodd_frank;

        return $this;
    }

    /**
     * Gets pre_qualification_disclosure
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq|null
     */
    public function getPreQualificationDisclosure()
    {
        return $this->container['pre_qualification_disclosure'];
    }

    /**
     * Sets pre_qualification_disclosure
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq|null $pre_qualification_disclosure pre_qualification_disclosure
     *
     * @return self
     */
    public function setPreQualificationDisclosure($pre_qualification_disclosure)
    {
        $this->container['pre_qualification_disclosure'] = $pre_qualification_disclosure;

        return $this;
    }

    /**
     * Gets privacy_policy
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentAssetReq
     */
    public function getPrivacyPolicy()
    {
        return $this->container['privacy_policy'];
    }

    /**
     * Sets privacy_policy
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentAssetReq $privacy_policy privacy_policy
     *
     * @return self
     */
    public function setPrivacyPolicy($privacy_policy)
    {
        $this->container['privacy_policy'] = $privacy_policy;

        return $this;
    }

    /**
     * Gets rewards_disclosure
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq|null
     */
    public function getRewardsDisclosure()
    {
        return $this->container['rewards_disclosure'];
    }

    /**
     * Sets rewards_disclosure
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq|null $rewards_disclosure rewards_disclosure
     *
     * @return self
     */
    public function setRewardsDisclosure($rewards_disclosure)
    {
        $this->container['rewards_disclosure'] = $rewards_disclosure;

        return $this;
    }

    /**
     * Gets summary_of_credit_terms
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq
     */
    public function getSummaryOfCreditTerms()
    {
        return $this->container['summary_of_credit_terms'];
    }

    /**
     * Sets summary_of_credit_terms
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentAssetAndTemplateReq $summary_of_credit_terms summary_of_credit_terms
     *
     * @return self
     */
    public function setSummaryOfCreditTerms($summary_of_credit_terms)
    {
        $this->container['summary_of_credit_terms'] = $summary_of_credit_terms;

        return $this;
    }

    /**
     * Gets terms_schedule
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentTemplateReq
     */
    public function getTermsSchedule()
    {
        return $this->container['terms_schedule'];
    }

    /**
     * Sets terms_schedule
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentTemplateReq $terms_schedule terms_schedule
     *
     * @return self
     */
    public function setTermsSchedule($terms_schedule)
    {
        $this->container['terms_schedule'] = $terms_schedule;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


