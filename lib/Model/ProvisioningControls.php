<?php
/**
 * ProvisioningControls
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Core API
 *
 * Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@marqeta.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ProvisioningControls Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ProvisioningControls implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'provisioning_controls';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'dwt_use_card_status_during_auth' => 'bool',
        'dwt_verify_atc_during_auth' => 'bool',
        'enable_discretionary_data_during_tar' => 'bool',
        'force_yellow_path_for_card_product' => 'bool',
        'in_app_provisioning' => '\OpenAPI\Client\Model\InAppProvisioning',
        'manual_entry' => '\OpenAPI\Client\Model\ManualEntry',
        'wallet_provider_card_on_file' => '\OpenAPI\Client\Model\WalletProviderCardOnFile',
        'web_push_provisioning' => '\OpenAPI\Client\Model\WebPushProvisioning'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'dwt_use_card_status_during_auth' => null,
        'dwt_verify_atc_during_auth' => null,
        'enable_discretionary_data_during_tar' => null,
        'force_yellow_path_for_card_product' => null,
        'in_app_provisioning' => null,
        'manual_entry' => null,
        'wallet_provider_card_on_file' => null,
        'web_push_provisioning' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'dwt_use_card_status_during_auth' => 'dwt_use_card_status_during_auth',
        'dwt_verify_atc_during_auth' => 'dwt_verify_atc_during_auth',
        'enable_discretionary_data_during_tar' => 'enable_discretionary_data_during_tar',
        'force_yellow_path_for_card_product' => 'force_yellow_path_for_card_product',
        'in_app_provisioning' => 'in_app_provisioning',
        'manual_entry' => 'manual_entry',
        'wallet_provider_card_on_file' => 'wallet_provider_card_on_file',
        'web_push_provisioning' => 'web_push_provisioning'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'dwt_use_card_status_during_auth' => 'setDwtUseCardStatusDuringAuth',
        'dwt_verify_atc_during_auth' => 'setDwtVerifyAtcDuringAuth',
        'enable_discretionary_data_during_tar' => 'setEnableDiscretionaryDataDuringTar',
        'force_yellow_path_for_card_product' => 'setForceYellowPathForCardProduct',
        'in_app_provisioning' => 'setInAppProvisioning',
        'manual_entry' => 'setManualEntry',
        'wallet_provider_card_on_file' => 'setWalletProviderCardOnFile',
        'web_push_provisioning' => 'setWebPushProvisioning'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'dwt_use_card_status_during_auth' => 'getDwtUseCardStatusDuringAuth',
        'dwt_verify_atc_during_auth' => 'getDwtVerifyAtcDuringAuth',
        'enable_discretionary_data_during_tar' => 'getEnableDiscretionaryDataDuringTar',
        'force_yellow_path_for_card_product' => 'getForceYellowPathForCardProduct',
        'in_app_provisioning' => 'getInAppProvisioning',
        'manual_entry' => 'getManualEntry',
        'wallet_provider_card_on_file' => 'getWalletProviderCardOnFile',
        'web_push_provisioning' => 'getWebPushProvisioning'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['dwt_use_card_status_during_auth'] = $data['dwt_use_card_status_during_auth'] ?? null;
        $this->container['dwt_verify_atc_during_auth'] = $data['dwt_verify_atc_during_auth'] ?? null;
        $this->container['enable_discretionary_data_during_tar'] = $data['enable_discretionary_data_during_tar'] ?? null;
        $this->container['force_yellow_path_for_card_product'] = $data['force_yellow_path_for_card_product'] ?? null;
        $this->container['in_app_provisioning'] = $data['in_app_provisioning'] ?? null;
        $this->container['manual_entry'] = $data['manual_entry'] ?? null;
        $this->container['wallet_provider_card_on_file'] = $data['wallet_provider_card_on_file'] ?? null;
        $this->container['web_push_provisioning'] = $data['web_push_provisioning'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets dwt_use_card_status_during_auth
     *
     * @return bool|null
     */
    public function getDwtUseCardStatusDuringAuth()
    {
        return $this->container['dwt_use_card_status_during_auth'];
    }

    /**
     * Sets dwt_use_card_status_during_auth
     *
     * @param bool|null $dwt_use_card_status_during_auth dwt_use_card_status_during_auth
     *
     * @return self
     */
    public function setDwtUseCardStatusDuringAuth($dwt_use_card_status_during_auth)
    {
        $this->container['dwt_use_card_status_during_auth'] = $dwt_use_card_status_during_auth;

        return $this;
    }

    /**
     * Gets dwt_verify_atc_during_auth
     *
     * @return bool|null
     */
    public function getDwtVerifyAtcDuringAuth()
    {
        return $this->container['dwt_verify_atc_during_auth'];
    }

    /**
     * Sets dwt_verify_atc_during_auth
     *
     * @param bool|null $dwt_verify_atc_during_auth dwt_verify_atc_during_auth
     *
     * @return self
     */
    public function setDwtVerifyAtcDuringAuth($dwt_verify_atc_during_auth)
    {
        $this->container['dwt_verify_atc_during_auth'] = $dwt_verify_atc_during_auth;

        return $this;
    }

    /**
     * Gets enable_discretionary_data_during_tar
     *
     * @return bool|null
     */
    public function getEnableDiscretionaryDataDuringTar()
    {
        return $this->container['enable_discretionary_data_during_tar'];
    }

    /**
     * Sets enable_discretionary_data_during_tar
     *
     * @param bool|null $enable_discretionary_data_during_tar enable_discretionary_data_during_tar
     *
     * @return self
     */
    public function setEnableDiscretionaryDataDuringTar($enable_discretionary_data_during_tar)
    {
        $this->container['enable_discretionary_data_during_tar'] = $enable_discretionary_data_during_tar;

        return $this;
    }

    /**
     * Gets force_yellow_path_for_card_product
     *
     * @return bool|null
     */
    public function getForceYellowPathForCardProduct()
    {
        return $this->container['force_yellow_path_for_card_product'];
    }

    /**
     * Sets force_yellow_path_for_card_product
     *
     * @param bool|null $force_yellow_path_for_card_product A value of `true` requires identity verification set-up for all digital wallets at the card product level.
     *
     * @return self
     */
    public function setForceYellowPathForCardProduct($force_yellow_path_for_card_product)
    {
        $this->container['force_yellow_path_for_card_product'] = $force_yellow_path_for_card_product;

        return $this;
    }

    /**
     * Gets in_app_provisioning
     *
     * @return \OpenAPI\Client\Model\InAppProvisioning|null
     */
    public function getInAppProvisioning()
    {
        return $this->container['in_app_provisioning'];
    }

    /**
     * Sets in_app_provisioning
     *
     * @param \OpenAPI\Client\Model\InAppProvisioning|null $in_app_provisioning in_app_provisioning
     *
     * @return self
     */
    public function setInAppProvisioning($in_app_provisioning)
    {
        $this->container['in_app_provisioning'] = $in_app_provisioning;

        return $this;
    }

    /**
     * Gets manual_entry
     *
     * @return \OpenAPI\Client\Model\ManualEntry|null
     */
    public function getManualEntry()
    {
        return $this->container['manual_entry'];
    }

    /**
     * Sets manual_entry
     *
     * @param \OpenAPI\Client\Model\ManualEntry|null $manual_entry manual_entry
     *
     * @return self
     */
    public function setManualEntry($manual_entry)
    {
        $this->container['manual_entry'] = $manual_entry;

        return $this;
    }

    /**
     * Gets wallet_provider_card_on_file
     *
     * @return \OpenAPI\Client\Model\WalletProviderCardOnFile|null
     */
    public function getWalletProviderCardOnFile()
    {
        return $this->container['wallet_provider_card_on_file'];
    }

    /**
     * Sets wallet_provider_card_on_file
     *
     * @param \OpenAPI\Client\Model\WalletProviderCardOnFile|null $wallet_provider_card_on_file wallet_provider_card_on_file
     *
     * @return self
     */
    public function setWalletProviderCardOnFile($wallet_provider_card_on_file)
    {
        $this->container['wallet_provider_card_on_file'] = $wallet_provider_card_on_file;

        return $this;
    }

    /**
     * Gets web_push_provisioning
     *
     * @return \OpenAPI\Client\Model\WebPushProvisioning|null
     */
    public function getWebPushProvisioning()
    {
        return $this->container['web_push_provisioning'];
    }

    /**
     * Sets web_push_provisioning
     *
     * @param \OpenAPI\Client\Model\WebPushProvisioning|null $web_push_provisioning web_push_provisioning
     *
     * @return self
     */
    public function setWebPushProvisioning($web_push_provisioning)
    {
        $this->container['web_push_provisioning'] = $web_push_provisioning;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


