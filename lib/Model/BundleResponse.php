<?php
/**
 * BundleResponse
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Core API
 *
 * Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@marqeta.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * BundleResponse Class Doc Comment
 *
 * @category Class
 * @description Contains information on a bundle.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class BundleResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'BundleResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'apr_policy_detail' => '\OpenAPI\Client\Model\PolicyAprResponse',
        'apr_policy_token' => 'string',
        'created_time' => '\DateTime',
        'credit_product_policy_detail' => '\OpenAPI\Client\Model\PolicyProductResponse',
        'credit_product_policy_token' => 'string',
        'description' => 'string',
        'document_policy_detail' => '\OpenAPI\Client\Model\PolicyDocumentResponse',
        'document_policy_token' => 'string',
        'fee_policy_detail' => '\OpenAPI\Client\Model\PolicyFeeResponse',
        'fee_policy_token' => 'string',
        'name' => 'string',
        'offer_policy_detail' => '\OpenAPI\Client\Model\PolicyOfferResponse',
        'offer_policy_token' => 'string',
        'reward_policy_detail' => '\OpenAPI\Client\Model\PolicyRewardResponse',
        'reward_policy_token' => 'string',
        'status' => '\OpenAPI\Client\Model\BundleResourceStatus',
        'token' => 'string',
        'updated_time' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'apr_policy_detail' => null,
        'apr_policy_token' => null,
        'created_time' => 'date-time',
        'credit_product_policy_detail' => null,
        'credit_product_policy_token' => null,
        'description' => null,
        'document_policy_detail' => null,
        'document_policy_token' => null,
        'fee_policy_detail' => null,
        'fee_policy_token' => null,
        'name' => null,
        'offer_policy_detail' => null,
        'offer_policy_token' => null,
        'reward_policy_detail' => null,
        'reward_policy_token' => null,
        'status' => null,
        'token' => null,
        'updated_time' => 'date-time'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'apr_policy_detail' => 'apr_policy_detail',
        'apr_policy_token' => 'apr_policy_token',
        'created_time' => 'created_time',
        'credit_product_policy_detail' => 'credit_product_policy_detail',
        'credit_product_policy_token' => 'credit_product_policy_token',
        'description' => 'description',
        'document_policy_detail' => 'document_policy_detail',
        'document_policy_token' => 'document_policy_token',
        'fee_policy_detail' => 'fee_policy_detail',
        'fee_policy_token' => 'fee_policy_token',
        'name' => 'name',
        'offer_policy_detail' => 'offer_policy_detail',
        'offer_policy_token' => 'offer_policy_token',
        'reward_policy_detail' => 'reward_policy_detail',
        'reward_policy_token' => 'reward_policy_token',
        'status' => 'status',
        'token' => 'token',
        'updated_time' => 'updated_time'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'apr_policy_detail' => 'setAprPolicyDetail',
        'apr_policy_token' => 'setAprPolicyToken',
        'created_time' => 'setCreatedTime',
        'credit_product_policy_detail' => 'setCreditProductPolicyDetail',
        'credit_product_policy_token' => 'setCreditProductPolicyToken',
        'description' => 'setDescription',
        'document_policy_detail' => 'setDocumentPolicyDetail',
        'document_policy_token' => 'setDocumentPolicyToken',
        'fee_policy_detail' => 'setFeePolicyDetail',
        'fee_policy_token' => 'setFeePolicyToken',
        'name' => 'setName',
        'offer_policy_detail' => 'setOfferPolicyDetail',
        'offer_policy_token' => 'setOfferPolicyToken',
        'reward_policy_detail' => 'setRewardPolicyDetail',
        'reward_policy_token' => 'setRewardPolicyToken',
        'status' => 'setStatus',
        'token' => 'setToken',
        'updated_time' => 'setUpdatedTime'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'apr_policy_detail' => 'getAprPolicyDetail',
        'apr_policy_token' => 'getAprPolicyToken',
        'created_time' => 'getCreatedTime',
        'credit_product_policy_detail' => 'getCreditProductPolicyDetail',
        'credit_product_policy_token' => 'getCreditProductPolicyToken',
        'description' => 'getDescription',
        'document_policy_detail' => 'getDocumentPolicyDetail',
        'document_policy_token' => 'getDocumentPolicyToken',
        'fee_policy_detail' => 'getFeePolicyDetail',
        'fee_policy_token' => 'getFeePolicyToken',
        'name' => 'getName',
        'offer_policy_detail' => 'getOfferPolicyDetail',
        'offer_policy_token' => 'getOfferPolicyToken',
        'reward_policy_detail' => 'getRewardPolicyDetail',
        'reward_policy_token' => 'getRewardPolicyToken',
        'status' => 'getStatus',
        'token' => 'getToken',
        'updated_time' => 'getUpdatedTime'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['apr_policy_detail'] = $data['apr_policy_detail'] ?? null;
        $this->container['apr_policy_token'] = $data['apr_policy_token'] ?? null;
        $this->container['created_time'] = $data['created_time'] ?? null;
        $this->container['credit_product_policy_detail'] = $data['credit_product_policy_detail'] ?? null;
        $this->container['credit_product_policy_token'] = $data['credit_product_policy_token'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['document_policy_detail'] = $data['document_policy_detail'] ?? null;
        $this->container['document_policy_token'] = $data['document_policy_token'] ?? null;
        $this->container['fee_policy_detail'] = $data['fee_policy_detail'] ?? null;
        $this->container['fee_policy_token'] = $data['fee_policy_token'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['offer_policy_detail'] = $data['offer_policy_detail'] ?? null;
        $this->container['offer_policy_token'] = $data['offer_policy_token'] ?? null;
        $this->container['reward_policy_detail'] = $data['reward_policy_detail'] ?? null;
        $this->container['reward_policy_token'] = $data['reward_policy_token'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['token'] = $data['token'] ?? null;
        $this->container['updated_time'] = $data['updated_time'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['apr_policy_token']) && (mb_strlen($this->container['apr_policy_token']) > 36)) {
            $invalidProperties[] = "invalid value for 'apr_policy_token', the character length must be smaller than or equal to 36.";
        }

        if (!is_null($this->container['apr_policy_token']) && !preg_match("/(?!^ +$)^.+$/", $this->container['apr_policy_token'])) {
            $invalidProperties[] = "invalid value for 'apr_policy_token', must be conform to the pattern /(?!^ +$)^.+$/.";
        }

        if (!is_null($this->container['credit_product_policy_token']) && (mb_strlen($this->container['credit_product_policy_token']) > 36)) {
            $invalidProperties[] = "invalid value for 'credit_product_policy_token', the character length must be smaller than or equal to 36.";
        }

        if (!is_null($this->container['credit_product_policy_token']) && !preg_match("/(?!^ +$)^.+$/", $this->container['credit_product_policy_token'])) {
            $invalidProperties[] = "invalid value for 'credit_product_policy_token', must be conform to the pattern /(?!^ +$)^.+$/.";
        }

        if (!is_null($this->container['document_policy_token']) && (mb_strlen($this->container['document_policy_token']) > 36)) {
            $invalidProperties[] = "invalid value for 'document_policy_token', the character length must be smaller than or equal to 36.";
        }

        if (!is_null($this->container['document_policy_token']) && !preg_match("/(?!^ +$)^.+$/", $this->container['document_policy_token'])) {
            $invalidProperties[] = "invalid value for 'document_policy_token', must be conform to the pattern /(?!^ +$)^.+$/.";
        }

        if (!is_null($this->container['fee_policy_token']) && (mb_strlen($this->container['fee_policy_token']) > 36)) {
            $invalidProperties[] = "invalid value for 'fee_policy_token', the character length must be smaller than or equal to 36.";
        }

        if (!is_null($this->container['fee_policy_token']) && !preg_match("/(?!^ +$)^.+$/", $this->container['fee_policy_token'])) {
            $invalidProperties[] = "invalid value for 'fee_policy_token', must be conform to the pattern /(?!^ +$)^.+$/.";
        }

        if (!is_null($this->container['offer_policy_token']) && (mb_strlen($this->container['offer_policy_token']) > 36)) {
            $invalidProperties[] = "invalid value for 'offer_policy_token', the character length must be smaller than or equal to 36.";
        }

        if (!is_null($this->container['offer_policy_token']) && !preg_match("/(?!^ +$)^.+$/", $this->container['offer_policy_token'])) {
            $invalidProperties[] = "invalid value for 'offer_policy_token', must be conform to the pattern /(?!^ +$)^.+$/.";
        }

        if (!is_null($this->container['reward_policy_token']) && (mb_strlen($this->container['reward_policy_token']) > 36)) {
            $invalidProperties[] = "invalid value for 'reward_policy_token', the character length must be smaller than or equal to 36.";
        }

        if (!is_null($this->container['reward_policy_token']) && !preg_match("/(?!^ +$)^.+$/", $this->container['reward_policy_token'])) {
            $invalidProperties[] = "invalid value for 'reward_policy_token', must be conform to the pattern /(?!^ +$)^.+$/.";
        }

        if (!is_null($this->container['token']) && (mb_strlen($this->container['token']) > 36)) {
            $invalidProperties[] = "invalid value for 'token', the character length must be smaller than or equal to 36.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets apr_policy_detail
     *
     * @return \OpenAPI\Client\Model\PolicyAprResponse|null
     */
    public function getAprPolicyDetail()
    {
        return $this->container['apr_policy_detail'];
    }

    /**
     * Sets apr_policy_detail
     *
     * @param \OpenAPI\Client\Model\PolicyAprResponse|null $apr_policy_detail apr_policy_detail
     *
     * @return self
     */
    public function setAprPolicyDetail($apr_policy_detail)
    {
        $this->container['apr_policy_detail'] = $apr_policy_detail;

        return $this;
    }

    /**
     * Gets apr_policy_token
     *
     * @return string|null
     */
    public function getAprPolicyToken()
    {
        return $this->container['apr_policy_token'];
    }

    /**
     * Sets apr_policy_token
     *
     * @param string|null $apr_policy_token Unique identifier of the bundle's APR policy.
     *
     * @return self
     */
    public function setAprPolicyToken($apr_policy_token)
    {
        if (!is_null($apr_policy_token) && (mb_strlen($apr_policy_token) > 36)) {
            throw new \InvalidArgumentException('invalid length for $apr_policy_token when calling BundleResponse., must be smaller than or equal to 36.');
        }
        if (!is_null($apr_policy_token) && (!preg_match("/(?!^ +$)^.+$/", $apr_policy_token))) {
            throw new \InvalidArgumentException("invalid value for $apr_policy_token when calling BundleResponse., must conform to the pattern /(?!^ +$)^.+$/.");
        }

        $this->container['apr_policy_token'] = $apr_policy_token;

        return $this;
    }

    /**
     * Gets created_time
     *
     * @return \DateTime|null
     */
    public function getCreatedTime()
    {
        return $this->container['created_time'];
    }

    /**
     * Sets created_time
     *
     * @param \DateTime|null $created_time Date and time when the bundle was created on Marqeta's credit platform, in UTC.
     *
     * @return self
     */
    public function setCreatedTime($created_time)
    {
        $this->container['created_time'] = $created_time;

        return $this;
    }

    /**
     * Gets credit_product_policy_detail
     *
     * @return \OpenAPI\Client\Model\PolicyProductResponse|null
     */
    public function getCreditProductPolicyDetail()
    {
        return $this->container['credit_product_policy_detail'];
    }

    /**
     * Sets credit_product_policy_detail
     *
     * @param \OpenAPI\Client\Model\PolicyProductResponse|null $credit_product_policy_detail credit_product_policy_detail
     *
     * @return self
     */
    public function setCreditProductPolicyDetail($credit_product_policy_detail)
    {
        $this->container['credit_product_policy_detail'] = $credit_product_policy_detail;

        return $this;
    }

    /**
     * Gets credit_product_policy_token
     *
     * @return string|null
     */
    public function getCreditProductPolicyToken()
    {
        return $this->container['credit_product_policy_token'];
    }

    /**
     * Sets credit_product_policy_token
     *
     * @param string|null $credit_product_policy_token Unique identifier of the bundle's credit product policy.
     *
     * @return self
     */
    public function setCreditProductPolicyToken($credit_product_policy_token)
    {
        if (!is_null($credit_product_policy_token) && (mb_strlen($credit_product_policy_token) > 36)) {
            throw new \InvalidArgumentException('invalid length for $credit_product_policy_token when calling BundleResponse., must be smaller than or equal to 36.');
        }
        if (!is_null($credit_product_policy_token) && (!preg_match("/(?!^ +$)^.+$/", $credit_product_policy_token))) {
            throw new \InvalidArgumentException("invalid value for $credit_product_policy_token when calling BundleResponse., must conform to the pattern /(?!^ +$)^.+$/.");
        }

        $this->container['credit_product_policy_token'] = $credit_product_policy_token;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description Description of the bundle.
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets document_policy_detail
     *
     * @return \OpenAPI\Client\Model\PolicyDocumentResponse|null
     */
    public function getDocumentPolicyDetail()
    {
        return $this->container['document_policy_detail'];
    }

    /**
     * Sets document_policy_detail
     *
     * @param \OpenAPI\Client\Model\PolicyDocumentResponse|null $document_policy_detail document_policy_detail
     *
     * @return self
     */
    public function setDocumentPolicyDetail($document_policy_detail)
    {
        $this->container['document_policy_detail'] = $document_policy_detail;

        return $this;
    }

    /**
     * Gets document_policy_token
     *
     * @return string|null
     */
    public function getDocumentPolicyToken()
    {
        return $this->container['document_policy_token'];
    }

    /**
     * Sets document_policy_token
     *
     * @param string|null $document_policy_token Unique identifier of the bundle's document policy.
     *
     * @return self
     */
    public function setDocumentPolicyToken($document_policy_token)
    {
        if (!is_null($document_policy_token) && (mb_strlen($document_policy_token) > 36)) {
            throw new \InvalidArgumentException('invalid length for $document_policy_token when calling BundleResponse., must be smaller than or equal to 36.');
        }
        if (!is_null($document_policy_token) && (!preg_match("/(?!^ +$)^.+$/", $document_policy_token))) {
            throw new \InvalidArgumentException("invalid value for $document_policy_token when calling BundleResponse., must conform to the pattern /(?!^ +$)^.+$/.");
        }

        $this->container['document_policy_token'] = $document_policy_token;

        return $this;
    }

    /**
     * Gets fee_policy_detail
     *
     * @return \OpenAPI\Client\Model\PolicyFeeResponse|null
     */
    public function getFeePolicyDetail()
    {
        return $this->container['fee_policy_detail'];
    }

    /**
     * Sets fee_policy_detail
     *
     * @param \OpenAPI\Client\Model\PolicyFeeResponse|null $fee_policy_detail fee_policy_detail
     *
     * @return self
     */
    public function setFeePolicyDetail($fee_policy_detail)
    {
        $this->container['fee_policy_detail'] = $fee_policy_detail;

        return $this;
    }

    /**
     * Gets fee_policy_token
     *
     * @return string|null
     */
    public function getFeePolicyToken()
    {
        return $this->container['fee_policy_token'];
    }

    /**
     * Sets fee_policy_token
     *
     * @param string|null $fee_policy_token Unique identifier of the bundle's fee policy.
     *
     * @return self
     */
    public function setFeePolicyToken($fee_policy_token)
    {
        if (!is_null($fee_policy_token) && (mb_strlen($fee_policy_token) > 36)) {
            throw new \InvalidArgumentException('invalid length for $fee_policy_token when calling BundleResponse., must be smaller than or equal to 36.');
        }
        if (!is_null($fee_policy_token) && (!preg_match("/(?!^ +$)^.+$/", $fee_policy_token))) {
            throw new \InvalidArgumentException("invalid value for $fee_policy_token when calling BundleResponse., must conform to the pattern /(?!^ +$)^.+$/.");
        }

        $this->container['fee_policy_token'] = $fee_policy_token;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Name of the bundle.
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets offer_policy_detail
     *
     * @return \OpenAPI\Client\Model\PolicyOfferResponse|null
     */
    public function getOfferPolicyDetail()
    {
        return $this->container['offer_policy_detail'];
    }

    /**
     * Sets offer_policy_detail
     *
     * @param \OpenAPI\Client\Model\PolicyOfferResponse|null $offer_policy_detail offer_policy_detail
     *
     * @return self
     */
    public function setOfferPolicyDetail($offer_policy_detail)
    {
        $this->container['offer_policy_detail'] = $offer_policy_detail;

        return $this;
    }

    /**
     * Gets offer_policy_token
     *
     * @return string|null
     */
    public function getOfferPolicyToken()
    {
        return $this->container['offer_policy_token'];
    }

    /**
     * Sets offer_policy_token
     *
     * @param string|null $offer_policy_token Unique identifier of the bundle's offer policy.
     *
     * @return self
     */
    public function setOfferPolicyToken($offer_policy_token)
    {
        if (!is_null($offer_policy_token) && (mb_strlen($offer_policy_token) > 36)) {
            throw new \InvalidArgumentException('invalid length for $offer_policy_token when calling BundleResponse., must be smaller than or equal to 36.');
        }
        if (!is_null($offer_policy_token) && (!preg_match("/(?!^ +$)^.+$/", $offer_policy_token))) {
            throw new \InvalidArgumentException("invalid value for $offer_policy_token when calling BundleResponse., must conform to the pattern /(?!^ +$)^.+$/.");
        }

        $this->container['offer_policy_token'] = $offer_policy_token;

        return $this;
    }

    /**
     * Gets reward_policy_detail
     *
     * @return \OpenAPI\Client\Model\PolicyRewardResponse|null
     */
    public function getRewardPolicyDetail()
    {
        return $this->container['reward_policy_detail'];
    }

    /**
     * Sets reward_policy_detail
     *
     * @param \OpenAPI\Client\Model\PolicyRewardResponse|null $reward_policy_detail reward_policy_detail
     *
     * @return self
     */
    public function setRewardPolicyDetail($reward_policy_detail)
    {
        $this->container['reward_policy_detail'] = $reward_policy_detail;

        return $this;
    }

    /**
     * Gets reward_policy_token
     *
     * @return string|null
     */
    public function getRewardPolicyToken()
    {
        return $this->container['reward_policy_token'];
    }

    /**
     * Sets reward_policy_token
     *
     * @param string|null $reward_policy_token Unique identifier of the bundle's reward policy.
     *
     * @return self
     */
    public function setRewardPolicyToken($reward_policy_token)
    {
        if (!is_null($reward_policy_token) && (mb_strlen($reward_policy_token) > 36)) {
            throw new \InvalidArgumentException('invalid length for $reward_policy_token when calling BundleResponse., must be smaller than or equal to 36.');
        }
        if (!is_null($reward_policy_token) && (!preg_match("/(?!^ +$)^.+$/", $reward_policy_token))) {
            throw new \InvalidArgumentException("invalid value for $reward_policy_token when calling BundleResponse., must conform to the pattern /(?!^ +$)^.+$/.");
        }

        $this->container['reward_policy_token'] = $reward_policy_token;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \OpenAPI\Client\Model\BundleResourceStatus|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \OpenAPI\Client\Model\BundleResourceStatus|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets token
     *
     * @return string|null
     */
    public function getToken()
    {
        return $this->container['token'];
    }

    /**
     * Sets token
     *
     * @param string|null $token Unique identifier of the bundle.
     *
     * @return self
     */
    public function setToken($token)
    {
        if (!is_null($token) && (mb_strlen($token) > 36)) {
            throw new \InvalidArgumentException('invalid length for $token when calling BundleResponse., must be smaller than or equal to 36.');
        }

        $this->container['token'] = $token;

        return $this;
    }

    /**
     * Gets updated_time
     *
     * @return \DateTime|null
     */
    public function getUpdatedTime()
    {
        return $this->container['updated_time'];
    }

    /**
     * Sets updated_time
     *
     * @param \DateTime|null $updated_time Date and time when the bundle was last updated on Marqeta's credit platform, in UTC.
     *
     * @return self
     */
    public function setUpdatedTime($updated_time)
    {
        $this->container['updated_time'] = $updated_time;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


