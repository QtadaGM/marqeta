<?php
/**
 * ApplicationTransitionRequest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Core API
 *
 * Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@marqeta.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ApplicationTransitionRequest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class ApplicationTransitionRequest implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ApplicationTransitionRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'application_state' => '\OpenAPI\Client\Model\ApplicationResourceState',
        'benefits_disclosure_tracking_token' => 'string',
        'card_member_agreement_tracking_token' => 'string',
        'rewards_disclosure_post_terms_tracking_token' => 'string',
        'terms_schedule_tracking_token' => 'string',
        'token' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'application_state' => null,
        'benefits_disclosure_tracking_token' => null,
        'card_member_agreement_tracking_token' => null,
        'rewards_disclosure_post_terms_tracking_token' => null,
        'terms_schedule_tracking_token' => null,
        'token' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'application_state' => 'application_state',
        'benefits_disclosure_tracking_token' => 'benefits_disclosure_tracking_token',
        'card_member_agreement_tracking_token' => 'card_member_agreement_tracking_token',
        'rewards_disclosure_post_terms_tracking_token' => 'rewards_disclosure_post_terms_tracking_token',
        'terms_schedule_tracking_token' => 'terms_schedule_tracking_token',
        'token' => 'token'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'application_state' => 'setApplicationState',
        'benefits_disclosure_tracking_token' => 'setBenefitsDisclosureTrackingToken',
        'card_member_agreement_tracking_token' => 'setCardMemberAgreementTrackingToken',
        'rewards_disclosure_post_terms_tracking_token' => 'setRewardsDisclosurePostTermsTrackingToken',
        'terms_schedule_tracking_token' => 'setTermsScheduleTrackingToken',
        'token' => 'setToken'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'application_state' => 'getApplicationState',
        'benefits_disclosure_tracking_token' => 'getBenefitsDisclosureTrackingToken',
        'card_member_agreement_tracking_token' => 'getCardMemberAgreementTrackingToken',
        'rewards_disclosure_post_terms_tracking_token' => 'getRewardsDisclosurePostTermsTrackingToken',
        'terms_schedule_tracking_token' => 'getTermsScheduleTrackingToken',
        'token' => 'getToken'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['application_state'] = $data['application_state'] ?? null;
        $this->container['benefits_disclosure_tracking_token'] = $data['benefits_disclosure_tracking_token'] ?? null;
        $this->container['card_member_agreement_tracking_token'] = $data['card_member_agreement_tracking_token'] ?? null;
        $this->container['rewards_disclosure_post_terms_tracking_token'] = $data['rewards_disclosure_post_terms_tracking_token'] ?? null;
        $this->container['terms_schedule_tracking_token'] = $data['terms_schedule_tracking_token'] ?? null;
        $this->container['token'] = $data['token'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['application_state'] === null) {
            $invalidProperties[] = "'application_state' can't be null";
        }
        if (!is_null($this->container['token']) && (mb_strlen($this->container['token']) > 36)) {
            $invalidProperties[] = "invalid value for 'token', the character length must be smaller than or equal to 36.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets application_state
     *
     * @return \OpenAPI\Client\Model\ApplicationResourceState
     */
    public function getApplicationState()
    {
        return $this->container['application_state'];
    }

    /**
     * Sets application_state
     *
     * @param \OpenAPI\Client\Model\ApplicationResourceState $application_state application_state
     *
     * @return self
     */
    public function setApplicationState($application_state)
    {
        $this->container['application_state'] = $application_state;

        return $this;
    }

    /**
     * Gets benefits_disclosure_tracking_token
     *
     * @return string|null
     */
    public function getBenefitsDisclosureTrackingToken()
    {
        return $this->container['benefits_disclosure_tracking_token'];
    }

    /**
     * Sets benefits_disclosure_tracking_token
     *
     * @param string|null $benefits_disclosure_tracking_token The tracking token of the Benefits Disclosure.  This is the `tracking_token` returned in the `BENEFITS_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.  Required if transitioning application state to `ACCEPTED`
     *
     * @return self
     */
    public function setBenefitsDisclosureTrackingToken($benefits_disclosure_tracking_token)
    {
        $this->container['benefits_disclosure_tracking_token'] = $benefits_disclosure_tracking_token;

        return $this;
    }

    /**
     * Gets card_member_agreement_tracking_token
     *
     * @return string|null
     */
    public function getCardMemberAgreementTrackingToken()
    {
        return $this->container['card_member_agreement_tracking_token'];
    }

    /**
     * Sets card_member_agreement_tracking_token
     *
     * @param string|null $card_member_agreement_tracking_token The tracking token of the Card Member Agreement.  This is the `tracking_token` returned in the `CARD_MEMBER_AGREEMENT` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.  Required if transitioning application state to `ACCEPTED`
     *
     * @return self
     */
    public function setCardMemberAgreementTrackingToken($card_member_agreement_tracking_token)
    {
        $this->container['card_member_agreement_tracking_token'] = $card_member_agreement_tracking_token;

        return $this;
    }

    /**
     * Gets rewards_disclosure_post_terms_tracking_token
     *
     * @return string|null
     */
    public function getRewardsDisclosurePostTermsTrackingToken()
    {
        return $this->container['rewards_disclosure_post_terms_tracking_token'];
    }

    /**
     * Sets rewards_disclosure_post_terms_tracking_token
     *
     * @param string|null $rewards_disclosure_post_terms_tracking_token The tracking token of the Rewards Disclosure Post-terms.  This is the `tracking_token` returned in the `REWARDS_DISCLOSURE_POST_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.  Required if transitioning application state to `ACCEPTED`
     *
     * @return self
     */
    public function setRewardsDisclosurePostTermsTrackingToken($rewards_disclosure_post_terms_tracking_token)
    {
        $this->container['rewards_disclosure_post_terms_tracking_token'] = $rewards_disclosure_post_terms_tracking_token;

        return $this;
    }

    /**
     * Gets terms_schedule_tracking_token
     *
     * @return string|null
     */
    public function getTermsScheduleTrackingToken()
    {
        return $this->container['terms_schedule_tracking_token'];
    }

    /**
     * Sets terms_schedule_tracking_token
     *
     * @param string|null $terms_schedule_tracking_token The tracking token of the Terms Schedule.  This is the `tracking_token` returned in the `TERMS_SCHEDULE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.  Required if transitioning application state to `ACCEPTED`
     *
     * @return self
     */
    public function setTermsScheduleTrackingToken($terms_schedule_tracking_token)
    {
        $this->container['terms_schedule_tracking_token'] = $terms_schedule_tracking_token;

        return $this;
    }

    /**
     * Gets token
     *
     * @return string|null
     */
    public function getToken()
    {
        return $this->container['token'];
    }

    /**
     * Sets token
     *
     * @param string|null $token Main identifier of the resource, also used as the idempotency key on the request.
     *
     * @return self
     */
    public function setToken($token)
    {
        if (!is_null($token) && (mb_strlen($token) > 36)) {
            throw new \InvalidArgumentException('invalid length for $token when calling ApplicationTransitionRequest., must be smaller than or equal to 36.');
        }

        $this->container['token'] = $token;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


