<?php
/**
 * DigitalWalletsManagementApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Core API
 *
 * Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.
 *
 * The version of the OpenAPI document: 3.0.19
 * Contact: support@marqeta.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DigitalWalletsManagementApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DigitalWalletsManagementApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for generateApplePayWPPJWT
     *
     * Create request for Apple Wallet web push provisioning.
     *
     */
    public function testGenerateApplePayWPPJWT()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDigitalwallettokens
     *
     * List digital wallet tokens.
     *
     */
    public function testGetDigitalwallettokens()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDigitalwallettokensCardCardtoken
     *
     * List digital wallet tokens for card.
     *
     */
    public function testGetDigitalwallettokensCardCardtoken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDigitalwallettokensToken
     *
     * Retrieve digital wallet token.
     *
     */
    public function testGetDigitalwallettokensToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDigitalwallettokensTokenShowtokenpan
     *
     * Retrieve digital wallet token PAN.
     *
     */
    public function testGetDigitalwallettokensTokenShowtokenpan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDigitalwallettokentransitionsDigitalwallettokenToken
     *
     * List transitions for digital wallet token.
     *
     */
    public function testGetDigitalwallettokentransitionsDigitalwallettokenToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDigitalwallettokentransitionsToken
     *
     * Retrieve digital wallet token transition.
     *
     */
    public function testGetDigitalwallettokentransitionsToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDigitalwalletprovisionrequestsAndroidpay
     *
     * Create digital wallet token provisioning request for Google Wallet.
     *
     */
    public function testPostDigitalwalletprovisionrequestsAndroidpay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDigitalwalletprovisionrequestsApplepay
     *
     * Create digital wallet token provisioning request for Apple Wallet.
     *
     */
    public function testPostDigitalwalletprovisionrequestsApplepay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDigitalwalletprovisionrequestsSamsungpay
     *
     * Create digital wallet token provisioning request for Samsung Wallet.
     *
     */
    public function testPostDigitalwalletprovisionrequestsSamsungpay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDigitalwalletprovisionrequestsXPay
     *
     * Create digital wallet token provisioning request for XPay.
     *
     */
    public function testPostDigitalwalletprovisionrequestsXPay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postDigitalwallettokentransitions
     *
     * Create digital wallet token transition.
     *
     */
    public function testPostDigitalwallettokentransitions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendOPCDataToGooglePay
     *
     * Create request for Google Wallet web push provisioning.
     *
     */
    public function testSendOPCDataToGooglePay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
